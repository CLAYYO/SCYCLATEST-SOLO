---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';
import { formatDate, formatDateTime, formatTime } from '../../utils';

// Required for dynamic routes in static builds
export async function getStaticPaths() {
  // In a real implementation, you would fetch all event IDs from Supabase
  // For now, we'll provide some sample paths
  return [
    { params: { id: '1' } },
    { params: { id: '2' } },
    { params: { id: '3' } },
  ];
}

// Get the event ID from the URL
const { id } = Astro.params;

// Fetch the specific event
const { data: event } = await supabase
  .from('events')
  .select('*')
  .eq('id', id)
  .single();

// Sample event data for demonstration if no real data
const sampleEvent = {
  id: '1',
  title: 'Spring Racing Series',
  description: 'Join us for the opening races of the 2024 season with multiple classes competing in Cardigan Bay. This exciting series marks the beginning of our competitive sailing calendar and welcomes sailors of all skill levels.',
  start_date: '2024-04-15T10:00:00Z',
  end_date: '2024-04-15T16:00:00Z',
  event_type: 'racing',
  location: 'Cardigan Bay',
  max_participants: 50,
  registration_required: true,
  registration_deadline: '2024-04-10T23:59:59Z',
  entry_fee: 25.00,
  is_members_only: false,
  organizer: 'Racing Committee',
  contact_email: 'racing@scyc.co.uk',
  contact_phone: '01758 712338',
  status: 'published',
  additional_info: 'Please bring your own safety equipment. Briefing will be held at 09:30 in the clubhouse. Weather conditions will be monitored and communicated via VHF Channel 8.',
  what_to_bring: ['Personal flotation device', 'Weather-appropriate clothing', 'Lunch and refreshments', 'VHF radio (recommended)'],
  schedule: [
    { time: '09:30', activity: 'Registration and briefing' },
    { time: '10:00', activity: 'First race start sequence' },
    { time: '12:30', activity: 'Lunch break' },
    { time: '14:00', activity: 'Afternoon races' },
    { time: '16:00', activity: 'Prize giving and results' }
  ]
};

// Use real data if available, otherwise use sample data
const displayEvent = event || sampleEvent;

if (!displayEvent) {
  return Astro.redirect('/events');
}

const startDate = new Date(displayEvent.start_date);
const endDate = new Date(displayEvent.end_date);
const registrationDeadline = displayEvent.registration_deadline ? new Date(displayEvent.registration_deadline) : null;
const isRegistrationOpen = registrationDeadline ? new Date() < registrationDeadline : true;
const isPastEvent = new Date() > endDate;

const eventTypeLabels = {
  racing: 'Racing Event',
  social: 'Social Event',
  training: 'Training & Course',
  meeting: 'Club Meeting',
  maintenance: 'Club Maintenance'
};

const eventTypeColors = {
  racing: 'bg-blue-100 text-blue-800',
  social: 'bg-purple-100 text-purple-800',
  training: 'bg-green-100 text-green-800',
  meeting: 'bg-yellow-100 text-yellow-800',
  maintenance: 'bg-gray-100 text-gray-800'
};
---

<Layout title={`${displayEvent.title} - SCYC Events`}>
  <!-- Breadcrumb -->
  <nav class="bg-gray-50 py-4">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex items-center space-x-2 text-sm text-gray-500">
        <a href="/" class="hover:text-navy-700">Home</a>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
        </svg>
        <a href="/events" class="hover:text-navy-700">Events</a>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
        </svg>
        <span class="text-gray-900">{displayEvent.title}</span>
      </div>
    </div>
  </nav>

  <!-- Event Header -->
  <section class="bg-white py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="lg:grid lg:grid-cols-3 lg:gap-8">
        <div class="lg:col-span-2">
          <div class="flex items-start justify-between mb-6">
            <div class="flex items-center space-x-3">
              <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${eventTypeColors[displayEvent.event_type] || 'bg-gray-100 text-gray-800'}`}>
                {eventTypeLabels[displayEvent.event_type] || displayEvent.event_type}
              </span>
              {displayEvent.is_members_only && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gold-100 text-gold-800">
                  Members Only
                </span>
              )}
              {isPastEvent && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">
                  Past Event
                </span>
              )}
            </div>
          </div>
          
          <h1 class="text-4xl font-serif font-bold text-navy-900 mb-4">
            {displayEvent.title}
          </h1>
          
          <p class="text-xl text-gray-600 leading-relaxed mb-8">
            {displayEvent.description}
          </p>
          
          {displayEvent.additional_info && (
            <div class="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-8">
              <h3 class="text-lg font-semibold text-blue-900 mb-2">
                Additional Information
              </h3>
              <p class="text-blue-800">
                {displayEvent.additional_info}
              </p>
            </div>
          )}
        </div>
        
        <!-- Event Details Sidebar -->
        <div class="mt-8 lg:mt-0">
          <div class="bg-gray-50 rounded-lg p-6 sticky top-6">
            <h3 class="text-lg font-semibold text-navy-900 mb-4">
              Event Details
            </h3>
            
            <div class="space-y-4">
              <div class="flex items-start">
                <svg class="w-5 h-5 text-gray-400 mt-0.5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                </svg>
                <div>
                  <div class="font-medium text-gray-900">
                    {formatDate(startDate)}
                  </div>
                  {startDate.toDateString() !== endDate.toDateString() && (
                    <div class="text-sm text-gray-500">
                      to {formatDate(endDate)}
                    </div>
                  )}
                </div>
              </div>
              
              <div class="flex items-start">
                <svg class="w-5 h-5 text-gray-400 mt-0.5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                </svg>
                <div>
                  <div class="font-medium text-gray-900">
                    {formatTime(startDate)}
                    {startDate.toDateString() === endDate.toDateString() && (
                      <span> - {formatTime(endDate)}</span>
                    )}
                  </div>
                  {startDate.toDateString() !== endDate.toDateString() && (
                    <div class="text-sm text-gray-500">
                      Ends: {formatTime(endDate)}
                    </div>
                  )}
                </div>
              </div>
              
              <div class="flex items-start">
                <svg class="w-5 h-5 text-gray-400 mt-0.5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"/>
                </svg>
                <div class="font-medium text-gray-900">
                  {displayEvent.location}
                </div>
              </div>
              
              <div class="flex items-start">
                <svg class="w-5 h-5 text-gray-400 mt-0.5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
                </svg>
                <div class="font-medium text-gray-900">
                  {displayEvent.organizer}
                </div>
              </div>
              
              {displayEvent.entry_fee > 0 && (
                <div class="flex items-start">
                  <svg class="w-5 h-5 text-gray-400 mt-0.5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"/>
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd"/>
                  </svg>
                  <div class="font-medium text-gray-900">
                    Â£{displayEvent.entry_fee.toFixed(2)}
                  </div>
                </div>
              )}
              
              {displayEvent.max_participants && (
                <div class="flex items-start">
                  <svg class="w-5 h-5 text-gray-400 mt-0.5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  <div class="font-medium text-gray-900">
                    Max {displayEvent.max_participants} participants
                  </div>
                </div>
              )}
            </div>
            
            {displayEvent.registration_required && (
              <div class="mt-6 pt-6 border-t border-gray-200">
                {registrationDeadline && (
                  <div class="mb-4">
                    <div class="text-sm font-medium text-gray-900 mb-1">
                      Registration Deadline
                    </div>
                    <div class={`text-sm ${isRegistrationOpen ? 'text-gray-600' : 'text-red-600'}`}>
                      {formatDateTime(registrationDeadline)}
                      {!isRegistrationOpen && ' (Closed)'}
                    </div>
                  </div>
                )}
                
                {!isPastEvent && isRegistrationOpen ? (
                  <a href={`/events/${displayEvent.id}/register`} class="btn-primary w-full text-center">
                    Register for Event
                  </a>
                ) : isPastEvent ? (
                  <div class="text-center py-3 px-4 bg-gray-100 text-gray-600 rounded-md">
                    Event has ended
                  </div>
                ) : (
                  <div class="text-center py-3 px-4 bg-red-100 text-red-600 rounded-md">
                    Registration closed
                  </div>
                )}
              </div>
            )}
            
            <!-- Contact Information -->
            <div class="mt-6 pt-6 border-t border-gray-200">
              <h4 class="text-sm font-medium text-gray-900 mb-3">
                Contact Organizer
              </h4>
              <div class="space-y-2">
                <a href={`mailto:${displayEvent.contact_email}`} class="flex items-center text-sm text-navy-700 hover:text-navy-900">
                  <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                    <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                  </svg>
                  {displayEvent.contact_email}
                </a>
                {displayEvent.contact_phone && (
                  <a href={`tel:${displayEvent.contact_phone}`} class="flex items-center text-sm text-navy-700 hover:text-navy-900">
                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"/>
                    </svg>
                    {displayEvent.contact_phone}
                  </a>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Event Schedule -->
  {displayEvent.schedule && displayEvent.schedule.length > 0 && (
    <section class="py-12 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="text-3xl font-serif font-bold text-navy-900 mb-8">
          Event Schedule
        </h2>
        
        <div class="bg-white rounded-lg shadow-sm overflow-hidden">
          <div class="divide-y divide-gray-200">
            {displayEvent.schedule.map((item, index) => (
              <div class="px-6 py-4 flex items-center">
                <div class="flex-shrink-0 w-20">
                  <span class="text-lg font-semibold text-navy-700">
                    {item.time}
                  </span>
                </div>
                <div class="ml-6">
                  <span class="text-gray-900">
                    {item.activity}
                  </span>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )}

  <!-- What to Bring -->
  {displayEvent.what_to_bring && displayEvent.what_to_bring.length > 0 && (
    <section class="py-12 bg-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="text-3xl font-serif font-bold text-navy-900 mb-8">
          What to Bring
        </h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          {displayEvent.what_to_bring.map((item) => (
            <div class="flex items-center p-4 bg-gray-50 rounded-lg">
              <svg class="w-5 h-5 text-green-600 mr-3" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
              </svg>
              <span class="text-gray-900">{item}</span>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Related Events -->
  <section class="py-12 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-serif font-bold text-navy-900 mb-8">
        Other Upcoming Events
      </h2>
      
      <div class="text-center py-8">
        <p class="text-gray-600 mb-4">
          Discover more exciting events happening at SCYC
        </p>
        <a href="/events" class="btn-primary">
          View All Events
        </a>
      </div>
    </div>
  </section>
</Layout>

<style>
  .btn-primary {
    @apply inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-navy-700 hover:bg-navy-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-navy-500 transition-colors;
  }
</style>