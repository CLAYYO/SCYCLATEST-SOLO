---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';
import { formatDate, formatDateTime } from '../../utils';

// Fetch upcoming events from Supabase
let events = [];
try {
  const { data, error } = await supabase
    .from('events')
    .select('*')
    .gte('start_date', new Date().toISOString())
    .order('start_date', { ascending: true });
  
  if (error) {
    console.error('Error fetching events:', error);
  } else {
    events = data || [];
  }
} catch (error) {
  console.error('Database connection error:', error);
}

// Fetch all events for calendar view (including past events)
let allEvents = [];
try {
  const { data, error } = await supabase
    .from('events')
    .select('*')
    .order('start_date', { ascending: true });
  
  if (error) {
    console.error('Error fetching all events:', error);
  } else {
    allEvents = data || [];
  }
} catch (error) {
  console.error('Database connection error:', error);
}

// Sample events data for demonstration
const sampleEvents = [
  {
    id: '1',
    title: 'Spring Racing Series',
    description: 'Join us for the opening races of the 2024 season with multiple classes competing in Cardigan Bay.',
    start_date: '2024-04-15T10:00:00Z',
    end_date: '2024-04-15T16:00:00Z',
    event_type: 'racing',
    location: 'Cardigan Bay',
    max_participants: 50,
    registration_required: true,
    registration_deadline: '2024-04-10T23:59:59Z',
    entry_fee: 25.00,
    is_members_only: false,
    organizer: 'Racing Committee',
    contact_email: 'racing@scyc.co.uk',
    status: 'published'
  },
  {
    id: '2',
    title: 'Annual Dinner Dance',
    description: 'Our prestigious annual dinner dance featuring a three-course meal, live music, and awards ceremony.',
    start_date: '2024-05-18T19:00:00Z',
    end_date: '2024-05-18T23:30:00Z',
    event_type: 'social',
    location: 'The Cove Restaurant',
    max_participants: 120,
    registration_required: true,
    registration_deadline: '2024-05-10T23:59:59Z',
    entry_fee: 65.00,
    is_members_only: true,
    organizer: 'Social Committee',
    contact_email: 'social@scyc.co.uk',
    status: 'published'
  },
  {
    id: '3',
    title: 'Youth Sailing Course',
    description: 'Week-long sailing course for young sailors aged 8-16. All equipment provided, qualified instructors.',
    start_date: '2024-06-24T09:00:00Z',
    end_date: '2024-06-28T16:00:00Z',
    event_type: 'training',
    location: 'SCYC Marina',
    max_participants: 20,
    registration_required: true,
    registration_deadline: '2024-06-15T23:59:59Z',
    entry_fee: 180.00,
    is_members_only: false,
    organizer: 'Training Committee',
    contact_email: 'training@scyc.co.uk',
    status: 'published'
  },
  {
    id: '4',
    title: 'Commodore\'s Cup',
    description: 'The premier racing event of the season. Open to all classes with special trophies and prizes.',
    start_date: '2024-07-20T11:00:00Z',
    end_date: '2024-07-21T17:00:00Z',
    event_type: 'racing',
    location: 'Cardigan Bay',
    max_participants: 80,
    registration_required: true,
    registration_deadline: '2024-07-15T23:59:59Z',
    entry_fee: 35.00,
    is_members_only: false,
    organizer: 'Commodore',
    contact_email: 'commodore@scyc.co.uk',
    status: 'published'
  },
  {
    id: '5',
    title: 'BBQ & Live Music Evening',
    description: 'Relaxed evening with BBQ food, local ales, and live acoustic music on the terrace.',
    start_date: '2024-08-10T18:00:00Z',
    end_date: '2024-08-10T22:00:00Z',
    event_type: 'social',
    location: 'Club Terrace',
    max_participants: 100,
    registration_required: false,
    registration_deadline: null,
    entry_fee: 0,
    is_members_only: false,
    organizer: 'Social Committee',
    contact_email: 'social@scyc.co.uk',
    status: 'published'
  }
];

// Use real data if available, otherwise use sample data
const displayEvents = events && events.length > 0 ? events : sampleEvents;

// Group events by type
const eventsByType = displayEvents.reduce((acc, event) => {
  if (!acc[event.event_type]) {
    acc[event.event_type] = [];
  }
  acc[event.event_type].push(event);
  return acc;
}, {});

const eventTypeLabels = {
  racing: 'Racing Events',
  social: 'Social Events',
  training: 'Training & Courses',
  meeting: 'Club Meetings',
  maintenance: 'Club Maintenance'
};

const eventTypeColors = {
  racing: 'bg-blue-100 text-blue-800',
  social: 'bg-purple-100 text-purple-800',
  training: 'bg-green-100 text-green-800',
  meeting: 'bg-yellow-100 text-yellow-800',
  maintenance: 'bg-gray-100 text-gray-800'
};
---

<Layout title="Events - SCYC">
  <!-- Hero Section -->
  <section class="relative bg-navy-900 text-white py-20">
    <div class="absolute inset-0 bg-gradient-to-r from-navy-900 to-navy-800 opacity-90"></div>
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <h1 class="text-5xl md:text-6xl font-serif font-bold mb-6 text-gold-400">
          Club Events
        </h1>
        <p class="text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto mb-8">
          Join us for racing, social events, training courses, and club activities throughout the sailing season.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a href="#upcoming" class="btn-primary">
            View Upcoming Events
          </a>
          <a href="#calendar" class="btn-secondary">
            Event Calendar
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Event Categories -->
  <section class="py-12 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-8">
        <h2 class="text-3xl font-serif font-bold text-navy-900 mb-4">
          Event Categories
        </h2>
        <p class="text-gray-600 max-w-2xl mx-auto">
          From competitive racing to social gatherings, there's something for everyone at SCYC
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div class="text-center p-6 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors">
          <div class="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-navy-900 mb-2">Racing Events</h3>
          <p class="text-gray-600 text-sm">Competitive sailing races for all classes and skill levels</p>
        </div>
        
        <div class="text-center p-6 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors">
          <div class="w-16 h-16 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-navy-900 mb-2">Social Events</h3>
          <p class="text-gray-600 text-sm">Dinners, parties, and social gatherings for members and guests</p>
        </div>
        
        <div class="text-center p-6 bg-green-50 rounded-lg hover:bg-green-100 transition-colors">
          <div class="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z"/>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-navy-900 mb-2">Training</h3>
          <p class="text-gray-600 text-sm">Sailing courses and training sessions for all ages</p>
        </div>
        
        <div class="text-center p-6 bg-yellow-50 rounded-lg hover:bg-yellow-100 transition-colors">
          <div class="w-16 h-16 bg-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-navy-900 mb-2">Club Meetings</h3>
          <p class="text-gray-600 text-sm">AGM, committee meetings, and club business</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Upcoming Events -->
  <section id="upcoming" class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-4xl font-serif font-bold text-navy-900 mb-4">
          Upcoming Events
        </h2>
        <p class="text-xl text-gray-600">
          Don't miss out on these exciting upcoming events at SCYC
        </p>
      </div>

      <!-- Event Filters -->
      <div class="flex flex-wrap gap-2 justify-center mb-8">
        <button class="px-4 py-2 bg-navy-700 text-white rounded-full text-sm font-medium hover:bg-navy-800 transition-colors" data-filter="all">
          All Events
        </button>
        <button class="px-4 py-2 bg-gray-200 text-gray-700 rounded-full text-sm font-medium hover:bg-gray-300 transition-colors" data-filter="racing">
          Racing
        </button>
        <button class="px-4 py-2 bg-gray-200 text-gray-700 rounded-full text-sm font-medium hover:bg-gray-300 transition-colors" data-filter="social">
          Social
        </button>
        <button class="px-4 py-2 bg-gray-200 text-gray-700 rounded-full text-sm font-medium hover:bg-gray-300 transition-colors" data-filter="training">
          Training
        </button>
      </div>

      <!-- Events Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {displayEvents.map((event) => {
          const startDate = new Date(event.start_date);
          const endDate = new Date(event.end_date);
          const registrationDeadline = event.registration_deadline ? new Date(event.registration_deadline) : null;
          const isRegistrationOpen = registrationDeadline ? new Date() < registrationDeadline : true;
          
          return (
            <div class={`bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow event-card`} data-type={event.event_type}>
              <div class="p-6">
                <div class="flex items-start justify-between mb-4">
                  <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${eventTypeColors[event.event_type] || 'bg-gray-100 text-gray-800'}`}>
                    {eventTypeLabels[event.event_type] || event.event_type}
                  </span>
                  {event.is_members_only && (
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gold-100 text-gold-800">
                      Members Only
                    </span>
                  )}
                </div>
                
                <h3 class="text-xl font-semibold text-navy-900 mb-2">
                  {event.title}
                </h3>
                
                <p class="text-gray-600 mb-4 line-clamp-3">
                  {event.description}
                </p>
                
                <div class="space-y-2 text-sm text-gray-500 mb-4">
                  <div class="flex items-center">
                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                    </svg>
                    {formatDate(startDate)}
                    {startDate.toDateString() !== endDate.toDateString() && (
                      <span> - {formatDate(endDate)}</span>
                    )}
                  </div>
                  
                  <div class="flex items-center">
                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                    </svg>
                    {startDate.toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' })}
                    {startDate.toDateString() === endDate.toDateString() && (
                      <span> - {endDate.toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' })}</span>
                    )}
                  </div>
                  
                  <div class="flex items-center">
                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"/>
                    </svg>
                    {event.location}
                  </div>
                  
                  {event.entry_fee > 0 && (
                    <div class="flex items-center">
                      <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"/>
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd"/>
                      </svg>
                      £{event.entry_fee.toFixed(2)}
                    </div>
                  )}
                </div>
                
                <div class="flex items-center justify-between">
                  <div class="text-sm text-gray-500">
                    {event.max_participants && (
                      <span>Max {event.max_participants} participants</span>
                    )}
                  </div>
                  
                  <div class="flex gap-2">
                    <a href={`/events/${event.id}`} class="text-navy-700 hover:text-navy-900 text-sm font-medium">
                      View Details
                    </a>
                    {event.registration_required && isRegistrationOpen && (
                      <a href={`/events/${event.id}/register`} class="bg-navy-700 hover:bg-navy-800 text-white px-3 py-1 rounded text-sm font-medium transition-colors">
                        Register
                      </a>
                    )}
                  </div>
                </div>
                
                {event.registration_required && registrationDeadline && (
                  <div class="mt-3 pt-3 border-t border-gray-100">
                    <p class="text-xs text-gray-500">
                      Registration deadline: {formatDate(registrationDeadline)}
                      {!isRegistrationOpen && (
                        <span class="text-red-600 font-medium"> (Closed)</span>
                      )}
                    </p>
                  </div>
                )}
              </div>
            </div>
          );
        })}
      </div>
      
      {displayEvents.length === 0 && (
        <div class="text-center py-12">
          <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No upcoming events</h3>
          <p class="text-gray-500">Check back soon for new events and activities.</p>
        </div>
      )}
    </div>
  </section>

  <!-- Event Calendar Section -->
  <section id="calendar" class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-4xl font-serif font-bold text-navy-900 mb-4">
          Event Calendar
        </h2>
        <p class="text-xl text-gray-600">
          View all events in calendar format
        </p>
      </div>
      
      <!-- Event Calendar Component -->
      <div id="event-calendar-container"></div>
    </div>
  </section>

  <!-- Contact Section -->
  <section class="py-16 bg-navy-900 text-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <h2 class="text-3xl font-serif font-bold text-gold-400 mb-4">
          Event Enquiries
        </h2>
        <p class="text-xl text-gray-300 mb-8">
          Have questions about our events or want to organize something special?
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a href="mailto:events@scyc.co.uk" class="btn-primary">
            Contact Events Team
          </a>
          <a href="/contact" class="btn-secondary">
            General Enquiries
          </a>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  .btn-primary {
    @apply inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-navy-700 hover:bg-navy-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-navy-500 transition-colors;
  }
  
  .btn-secondary {
    @apply inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-navy-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-navy-500 transition-colors;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  import EventCalendar from '../../components/events/EventCalendar.tsx';
  import EventFilter from '../../components/events/EventFilter.tsx';
  import React from 'react';
  import { createRoot } from 'react-dom/client';

  // Event filtering functionality
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('[data-filter]');
    const eventCards = document.querySelectorAll('.event-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filter = this.getAttribute('data-filter');
        
        // Update button states
        filterButtons.forEach(btn => {
          btn.classList.remove('bg-navy-700', 'text-white');
          btn.classList.add('bg-gray-200', 'text-gray-700');
        });
        this.classList.remove('bg-gray-200', 'text-gray-700');
        this.classList.add('bg-navy-700', 'text-white');
        
        // Filter events
        eventCards.forEach(card => {
          if (filter === 'all' || card.getAttribute('data-type') === filter) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });
      });
    });

    // Mount EventCalendar React component
    const calendarContainer = document.getElementById('event-calendar-container');
    if (calendarContainer) {
      const allEventsData = JSON.parse(document.getElementById('all-events-data').textContent);
      const root = createRoot(calendarContainer);
      root.render(React.createElement(EventCalendar, { events: allEventsData }));
    }
  });
</script>

<!-- Pass events data to JavaScript -->
<script type="application/json" id="all-events-data">
  {JSON.stringify(allEvents.length > 0 ? allEvents : sampleEvents)}
</script>