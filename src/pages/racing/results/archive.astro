---
import Layout from '../../../layouts/Layout.astro';
import { supabase } from '../../../lib/supabase';

// Fetch archived races (older than current season)
const currentYear = new Date().getFullYear();
const { data: archivedRaces } = await supabase
  .from('races')
  .select(`
    id,
    name,
    date,
    venue,
    series_id,
    race_series!inner(name, year)
  `)
  .lt('race_series.year', currentYear)
  .order('date', { ascending: false });

// Group races by year and series
const racesByYear = archivedRaces?.reduce((acc, race) => {
  const year = race.race_series.year;
  if (!acc[year]) {
    acc[year] = {};
  }
  const seriesName = race.race_series.name;
  if (!acc[year][seriesName]) {
    acc[year][seriesName] = [];
  }
  acc[year][seriesName].push(race);
  return acc;
}, {}) || {};

const years = Object.keys(racesByYear).sort((a, b) => b - a);
---

<Layout title="Racing Results Archive - SCYC">
  <div class="min-h-screen bg-gradient-to-b from-blue-50 to-white">
    <!-- Navigation Breadcrumb -->
    <div class="bg-navy-800 text-white py-4">
      <div class="container mx-auto px-4">
        <nav class="flex items-center space-x-2 text-sm">
          <a href="/" class="hover:text-gold-400 transition-colors">Home</a>
          <span class="text-gray-300">/</span>
          <a href="/racing" class="hover:text-gold-400 transition-colors">Racing</a>
          <span class="text-gray-300">/</span>
          <a href="/racing/results" class="hover:text-gold-400 transition-colors">Results</a>
          <span class="text-gray-300">/</span>
          <span class="text-gold-400">Archive</span>
        </nav>
      </div>
    </div>

    <!-- Header -->
    <div class="bg-white border-b border-gray-200">
      <div class="container mx-auto px-4 py-8">
        <div class="text-center">
          <h1 class="text-4xl font-bold text-navy-800 mb-4">Racing Results Archive</h1>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Browse historical racing results from previous seasons at South Caernarvonshire Yacht Club
          </p>
        </div>
      </div>
    </div>

    <!-- Archive Content -->
    <div class="container mx-auto px-4 py-8">
      <!-- Search and Filter -->
      <div class="mb-8 bg-white rounded-lg shadow-md p-6">
        <div class="flex flex-col md:flex-row gap-4">
          <div class="flex-1">
            <label for="search" class="block text-sm font-medium text-gray-700 mb-2">
              Search Results
            </label>
            <input
              type="text"
              id="search"
              placeholder="Search by race name, series, or venue..."
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-navy-500 focus:border-transparent"
            />
          </div>
          <div class="md:w-48">
            <label for="yearFilter" class="block text-sm font-medium text-gray-700 mb-2">
              Filter by Year
            </label>
            <select
              id="yearFilter"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-navy-500 focus:border-transparent"
            >
              <option value="">All Years</option>
              {years.map(year => (
                <option value={year} key={year}>{year}</option>
              ))}
            </select>
          </div>
        </div>
      </div>

      <!-- Results by Year -->
      {years.length > 0 ? (
        <div class="space-y-8">
          {years.map(year => (
            <div key={year} class="year-section" data-year={year}>
              <h2 class="text-3xl font-bold text-navy-800 mb-6 border-b-2 border-gold-400 pb-2">
                {year} Season
              </h2>
              
              <div class="grid gap-6">
                {Object.entries(racesByYear[year]).map(([seriesName, races]) => (
                  <div key={seriesName} class="series-section bg-white rounded-lg shadow-md overflow-hidden">
                    <div class="bg-navy-800 text-white px-6 py-4">
                      <h3 class="text-xl font-semibold">{seriesName}</h3>
                      <p class="text-navy-200">{races.length} race{races.length !== 1 ? 's' : ''}</p>
                    </div>
                    
                    <div class="p-6">
                      <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
                        {races.map(race => (
                          <div key={race.id} class="race-card border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                            <h4 class="font-semibold text-navy-800 mb-2">{race.name}</h4>
                            <div class="text-sm text-gray-600 space-y-1">
                              <div class="flex items-center">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                {new Date(race.date).toLocaleDateString('en-AU', {
                                  year: 'numeric',
                                  month: 'long',
                                  day: 'numeric'
                                })}
                              </div>
                              {race.venue && (
                                <div class="flex items-center">
                                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                  </svg>
                                  {race.venue}
                                </div>
                              )}
                            </div>
                            <div class="mt-4">
                              <a
                                href={`/racing/results/${race.id}`}
                                class="inline-flex items-center px-4 py-2 bg-navy-800 text-white text-sm rounded-lg hover:bg-navy-700 transition-colors"
                              >
                                View Results
                                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                </svg>
                              </a>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <div class="max-w-md mx-auto">
            <svg class="w-16 h-16 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <h3 class="text-xl font-semibold text-gray-700 mb-2">No Archived Results</h3>
            <p class="text-gray-500">There are no archived racing results available at this time.</p>
          </div>
        </div>
      )}

      <!-- Navigation -->
      <div class="mt-12 text-center">
        <a 
          href="/racing/results" 
          class="inline-flex items-center px-6 py-3 bg-navy-800 text-white rounded-lg hover:bg-navy-700 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
          </svg>
          Back to Current Results
        </a>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Search and filter functionality
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('search');
    const yearFilter = document.getElementById('yearFilter');
    const yearSections = document.querySelectorAll('.year-section');
    const raceCards = document.querySelectorAll('.race-card');

    function filterResults() {
      const searchTerm = searchInput.value.toLowerCase();
      const selectedYear = yearFilter.value;

      // Filter by year
      yearSections.forEach(section => {
        const year = section.dataset.year;
        const shouldShowYear = !selectedYear || year === selectedYear;
        section.style.display = shouldShowYear ? 'block' : 'none';
      });

      // Filter by search term
      raceCards.forEach(card => {
        const cardText = card.textContent.toLowerCase();
        const matchesSearch = !searchTerm || cardText.includes(searchTerm);
        const yearSection = card.closest('.year-section');
        const yearVisible = yearSection && yearSection.style.display !== 'none';
        
        card.style.display = matchesSearch && yearVisible ? 'block' : 'none';
      });

      // Hide empty series sections
      document.querySelectorAll('.series-section').forEach(section => {
        const visibleCards = section.querySelectorAll('.race-card[style*="block"], .race-card:not([style*="none"])');
        section.style.display = visibleCards.length > 0 ? 'block' : 'none';
      });
    }

    searchInput.addEventListener('input', filterResults);
    yearFilter.addEventListener('change', filterResults);
  });
</script>

<style>
  .race-card {
    transition: all 0.3s ease;
  }
  
  .race-card:hover {
    transform: translateY(-2px);
  }
</style>